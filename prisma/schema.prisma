// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  BLOCKED
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique @db.VarChar(99)
  password String
  name     String?
  status   Status  @default(ACTIVE)
  imageUrl String?
  currency String  @default("USD") @db.VarChar(3)
  budget   Float?  @db.DoublePrecision

  records     Record[]
  connections Connection[]
  categories  Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// this can be both a connected account or manual account
model Connection {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(99)
  meta      Json?     @db.Json
  imageUrl  String?
  currency  String    @default("USD") @db.VarChar(3)
  token     String?
  secret    String?
  isManual  Boolean   @default(false)
  expiresAt DateTime? @db.Timestamp(6)

  userId      String
  user        User     @relation(fields: [userId], references: [id])
  FromRecords Record[] @relation("FromConnection")
  ToRecords   Record[] @relation("ToConnection")

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

enum RecordType {
  INCOME
  TRANSFER
  EXPENSE
  INVESTMENT
}

model Record {
  id       Int        @id @default(autoincrement())
  name     String?    @db.VarChar(50)
  notes    String?    @db.Text
  amount   Float      @db.DoublePrecision
  currency String     @db.VarChar(3)
  type     RecordType
  meta     Json?      @db.Json

  userId   String
  user     User        @relation(fields: [userId], references: [id])
  from     Int
  From     Connection  @relation("FromConnection", fields: [from], references: [id])
  category Int
  Category Category    @relation(fields: [category], references: [id])
  to       Int?
  To       Connection? @relation("ToConnection", fields: [to], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(50)
  notes     String?
  timesUsed Int     @default(0)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Record    Record[]
}
